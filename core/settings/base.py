"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
import environ
from django.conf.global_settings import AUTH_USER_MODEL

from core.jazzmin_conf import *  # noqa


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Reading .env file
env = environ.Env()
env.read_env(os.path.join(BASE_DIR, ".env"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG")

ALLOWED_HOSTS = ["*"]

# Application definition

DJANGO_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

CUSTOM_APPS = [
    'apps.common',
    'apps.users',
    'apps.payments',
    'apps.providers',
]

THIRD_PARTY_APPS = [
    'rest_framework',
    'drf_yasg',
    'corsheaders',
    'django_filters',
    'rest_framework_simplejwt',
    'django_celery_beat',
    'django_celery_results',
    'django_extensions',
]

INSTALLED_APPS = DJANGO_APPS + CUSTOM_APPS + THIRD_PARTY_APPS


REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        # main authenticator must be at the top
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        # "rest_framework.authentication.SessionAuthentication",
    ),
    "DEFAULT_FILTER_BACKENDS": ("django_filters.rest_framework.DjangoFilterBackend",),
    "DEFAULT_RENDERER_CLASSES": ("rest_framework.renderers.JSONRenderer",),
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 10,
    "DEFAULT_THROTTLE_RATES": {"anon": "10/second", "user": "10/second"},
    # "EXCEPTION_HANDLER": "utils.exceptionhandler.custom_exception_handler",
}

SWAGGER_SETTINGS = {
   'SECURITY_DEFINITIONS': {
      'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
      }
   }
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'core.middleware.security.MaintenanceModeMiddleware',
    'core.middleware.security.SecurityHeadersMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'core.middleware.security.RateLimitMiddleware',
    'core.middleware.security.APIKeyValidationMiddleware',
    'core.middleware.security.RequestLoggingMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ BASE_DIR / 'templates' ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env.str('DB_NAME', 'ucpg_db'),
        'USER': env.str('DB_USER', 'postgres'),
        'PASSWORD': env.str('DB_PASSWORD', 'postgres'),
        'HOST': env.str('DB_HOST', 'localhost'),
        'PORT': env.str('DB_PORT', '5432'),
    }
}

# Redis Configuration
REDIS_URL = env.str('REDIS_URL', 'redis://localhost:6379/0')

# Cache Configuration
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.redis.RedisCache',
        'LOCATION': REDIS_URL,
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Tashkent'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "static"
STATICFILES_DIRS = (BASE_DIR / "staticfiles",)

MEDIA_URL = "media/"
MEDIA_ROOT = BASE_DIR / "media"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'users.User'


# Celery Configuration
CELERY_BROKER_URL = REDIS_URL
CELERY_RESULT_BACKEND = REDIS_URL
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'


# UCPG Specific Settings
UCPG_SETTINGS = {
    # Commission Settings
    'DEFAULT_COMMISSION_RATE': env.float('DEFAULT_COMMISSION_RATE', 0.05),  # 5%
    'MAX_COMMISSION_RATE': env.float('MAX_COMMISSION_RATE', 0.20),  # 20%
    
    # Promo Link Settings
    'PROMO_LINK_EXPIRY_HOURS': env.int('PROMO_LINK_EXPIRY_HOURS', 24),
    'PROMO_CODE_LENGTH': env.int('PROMO_CODE_LENGTH', 12),
    
    # Transaction Settings
    'MIN_TRANSACTION_AMOUNT': env.float('MIN_TRANSACTION_AMOUNT', 1.0),
    'MAX_TRANSACTION_AMOUNT': env.float('MAX_TRANSACTION_AMOUNT', 10000.0),
    
    # Exchange Rate Settings
    'EXCHANGE_RATE_UPDATE_INTERVAL': env.int('EXCHANGE_RATE_UPDATE_INTERVAL', 300),  # 5 minutes
    'EXCHANGE_RATE_CACHE_TIMEOUT': env.int('EXCHANGE_RATE_CACHE_TIMEOUT', 600),  # 10 minutes
}

# Payment Gateway Settings
STRIPE_PUBLISHABLE_KEY = env.str('STRIPE_PUBLISHABLE_KEY', '')
STRIPE_SECRET_KEY = env.str('STRIPE_SECRET_KEY', '')
STRIPE_WEBHOOK_SECRET = env.str('STRIPE_WEBHOOK_SECRET', '')

# Cryptocurrency Settings
BTC_NODE_URL = env.str('BTC_NODE_URL', '')
ETH_NODE_URL = env.str('ETH_NODE_URL', 'https://mainnet.infura.io/v3/your-project-id')
USDT_CONTRACT_ADDRESS = env.str('USDT_CONTRACT_ADDRESS', '0xdAC17F958D2ee523a2206206994597C13D831ec7')
MASTER_WALLET_ADDRESS = env.str('MASTER_WALLET_ADDRESS', '')
MASTER_WALLET_PRIVATE_KEY = env.str('MASTER_WALLET_PRIVATE_KEY', '')

# Exchange Rate API Settings
BINANCE_API_URL = 'https://api.binance.com/api/v3'
COINGECKO_API_URL = 'https://api.coingecko.com/api/v3'
COINGECKO_API_KEY = env.str('COINGECKO_API_KEY', '')

# Security Settings
ENCRYPTION_KEY = env.str('ENCRYPTION_KEY', '')
JWT_EXPIRY_HOURS = env.int('JWT_EXPIRY_HOURS', 24)

# CORS Settings for API access
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # React development server
    "http://127.0.0.1:3000",
]

CORS_ALLOW_ALL_ORIGINS = DEBUG  # Only in development
